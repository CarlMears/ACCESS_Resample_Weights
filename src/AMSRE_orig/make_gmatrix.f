c     August 08, 2005, 01:17:14 PM change on August 9 2005.  The statement IF(JFREQ.EQ.4) CYCLE was inserted
C     One the first run of the program, the program stopped when JFREQ=4 becuase there was no target file
C     (OPENBIG said there was no file and I enter 1 to stop program)
C     A special program was used to complete the run for JFREQ=5 and then the 2 files were merged together
C     This was faster than completely rerunning MAKE_GMATRIX

	PROGRAM MAKE_GMATRIX	 	  	 		   		   
	 													     	   
	IMPLICIT NONE

	INTEGER(4), PARAMETER:: NLAT=1601
	INTEGER(4), PARAMETER:: NLON=2101

	INTEGER(4), PARAMETER:: NPIXEL_MAX=100000
	INTEGER(4), PARAMETER:: NOBS_MAX=1000
												   
	INTEGER(4), PARAMETER :: MAX_OBS_HIGH=486
	INTEGER(4), PARAMETER :: MAX_OBS_LO=MAX_OBS_HIGH/2

	INTEGER(2) ILAT2(NPIXEL_MAX,0:NOBS_MAX),ILON2(NPIXEL_MAX,0:NOBS_MAX)
	INTEGER(4) NPIXEL(0:NOBS_MAX)
	REAL(8) GOBS(NPIXEL_MAX,0:NOBS_MAX),GOBS1(NLON,NLAT)

	INTEGER(4) ISCANSV(NOBS_MAX),ICELSV(NOBS_MAX)
	INTEGER(4) ISCAN,ICEL,JCEL,KCEL,KCEL_MAX,NUMCEL,NOBS,IOBS,JOBS,ILAT,ILON,IPIXEL,JCEL_REF
	INTEGER(4) IFREQ,JFREQ
	INTEGER(1) INDEX_WT(-32:32,-14:14,MAX_OBS_LO,8)

	REAL(8) XSUM
	REAL(8) V(NOBS_MAX),G(NOBS_MAX,NOBS_MAX)


	CALL OPENBIG(3,'find_neighbors.dat','old')
	READ(3) INDEX_WT
	CLOSE(3)

	CALL OPENBIG(4,'C:\gain_arrays\make_gmatrix.dat','NEW')

	DO JFREQ=1,5     !THIS IS THE TARGET
	IF(JFREQ.EQ.4) CYCLE  !23 GHZ IS NEVER A TARGE
	DO JCEL=1,MAX_OBS_LO  ! THIS IS THE TARGET 

	ISCAN=0; IOBS=0
	CALL READ_GOBS(1,NPIXEL_MAX,NOBS_MAX,JFREQ,ISCAN,JCEL,IOBS, NPIXEL,ILAT2,ILON2,GOBS)	  !FIRST ARGUMENT = 1 DENOTES TARGET GAINS

	DO IFREQ=1,8
	IF(IFREQ.EQ.6) CYCLE
	IF(IFREQ.LT.JFREQ) CYCLE  !NEVER RESAMPLE A FREQ TO A HIGHER FREQ TARGET
	WRITE(*,*) JFREQ,JCEL,IFREQ 

	IF(IFREQ.LE.6) THEN
	NUMCEL=MAX_OBS_LO
	KCEL_MAX=18
	JCEL_REF=JCEL
	ELSE
	NUMCEL=MAX_OBS_HIGH
	KCEL_MAX=32
	JCEL_REF=2*JCEL-1
	ENDIF

	IOBS=0
	DO ISCAN=-14,14
	DO KCEL=-KCEL_MAX,KCEL_MAX
	IF(INDEX_WT(KCEL,ISCAN,JCEL,IFREQ).EQ.0) CYCLE
	ICEL=KCEL + JCEL_REF
	IF(ICEL.LT.1 .OR. ICEL.GT. NUMCEL) STOP 'PGM STOPPED, ICEL OOB'
	IOBS=IOBS+1
	IF(IOBS.GT.NOBS_MAX) STOP 'PGM STOPPED, IOBS OOB'
	CALL READ_GOBS(2,NPIXEL_MAX,NOBS_MAX,IFREQ,ISCAN,ICEL,IOBS, NPIXEL,ILAT2,ILON2,GOBS)  !FIRST ARGUMENT = 2 DENOTES OBS GAINS
      ISCANSV(IOBS)=ISCAN
	ICELSV(IOBS)=ICEL
	ENDDO	!ISCAN
	ENDDO	!KCEL 
	NOBS=IOBS


	DO IOBS=1,NOBS

	GOBS1=0
	XSUM=0
	DO IPIXEL=1,NPIXEL(IOBS)
	ILAT=ILAT2(IPIXEL, IOBS)
	ILON=ILON2(IPIXEL, IOBS)
	GOBS1(ILON,ILAT)=GOBS(IPIXEL,IOBS)
	XSUM=XSUM + GOBS1(ILON,ILAT)
	ENDDO
	IF(ABS(XSUM-1.D0).GT.1.E-12) WRITE(*,*) XSUM
	IF(ABS(XSUM-1.D0).GT.1.E-12) WRITE(*,*) 'ERROR IN NORMALIZATION, PGM STOPPED'


	DO JOBS=0,NOBS

	XSUM=0
	DO IPIXEL=1,NPIXEL(JOBS)
	ILAT=ILAT2(IPIXEL, JOBS)
	ILON=ILON2(IPIXEL, JOBS)
	XSUM=XSUM + GOBS1(ILON,ILAT)*GOBS(IPIXEL,JOBS)
	ENDDO

	IF(JOBS.EQ.0) THEN
	V(IOBS)=XSUM
	ELSE
	G(IOBS,JOBS)=XSUM
	ENDIF

	ENDDO	 !JOBS
	ENDDO	 !IOBS


	WRITE(4) NOBS
	WRITE(4) V(1:NOBS)
	DO IOBS=1,NOBS
	DO JOBS=IOBS,NOBS
	WRITE(4) G(IOBS,JOBS)
	ENDDO
	ENDDO


	ENDDO	!IFREQ
	ENDDO	!JCEL
	ENDDO   !JFREQ

	STOP 'NORM END'								   
	END



	SUBROUTINE READ_GOBS(ICASE,NPIXEL_MAX,NOBS_MAX,IFREQ,ISCAN,ICEL,IOBS, NPIXEL,ILAT2,ILON2,GOBS)
	IMPLICIT NONE
	CHARACTER(80) FILENAME
	INTEGER(2) ILAT2X,ILON2X
	INTEGER(4) ICASE,NPIXEL_MAX,NOBS_MAX,IFREQ,IOBS,ISCAN,ICEL,I,IPIXEL

	INTEGER(2) ILAT2(NPIXEL_MAX,0:NOBS_MAX),ILON2(NPIXEL_MAX,0:NOBS_MAX)
	INTEGER(4) NPIXEL(0:NOBS_MAX)
	REAL(4) GOBSX
	REAL(8) GOBS(NPIXEL_MAX,0:NOBS_MAX)
	REAL(8) XSUM

	IF(ICASE.EQ.1) THEN
      WRITE(FILENAME,9001) IFREQ,ISCAN+15,ICEL
 9001 FORMAT('C:\target_arrays\freq',I1,'\s',i2.2,'c',i3.3,'.dat')
	ELSE
      WRITE(FILENAME,9002) IFREQ,ISCAN+15,ICEL
 9002 FORMAT('C:\gain_arrays\freq',I1,'\s',i2.2,'c',i3.3,'.dat')
      ENDIF
 	CALL OPENBIG(3,FILENAME,'OLD')
	IPIXEL=0; XSUM=0
	DO I=1,1234567890
	READ(3,END=100) ILAT2X,ILON2X,GOBSX
	IPIXEL=IPIXEL+1
	IF(IPIXEL.GT.NPIXEL_MAX) STOP 'PGM STOPPED, IPIXEL OOB'
	ILAT2(IPIXEL,IOBS)=ILAT2X
	ILON2(IPIXEL,IOBS)=ILON2X
	GOBS( IPIXEL,IOBS)=GOBSX 
	NPIXEL(      IOBS)=IPIXEL
	XSUM=XSUM+GOBS( IPIXEL,IOBS)
	ENDDO
  100	CONTINUE
      CLOSE(3)
      GOBS(1:IPIXEL,IOBS)=GOBS(1:IPIXEL,IOBS)/XSUM
	RETURN
	END



	INCLUDE 'X:\SYSPGM\OPENBIG.FOR'
